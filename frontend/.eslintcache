[{"C:\\Users\\dimos\\Desktop\\Knowledge Project\\frontend\\src\\App.js":"1","C:\\Users\\dimos\\Desktop\\Knowledge Project\\frontend\\src\\components\\showAll.js":"2","C:\\Users\\dimos\\Desktop\\Knowledge Project\\frontend\\src\\hooks\\inputHook.js":"3","C:\\Users\\dimos\\Desktop\\Knowledge Project\\frontend\\src\\index.js":"4","C:\\Users\\dimos\\Desktop\\Knowledge Project\\frontend\\src\\components\\update.js":"5","C:\\Users\\dimos\\Desktop\\Knowledge Project\\frontend\\src\\components\\add.js":"6","C:\\Users\\dimos\\Desktop\\CRUD API Project\\frontend\\src\\index.js":"7","C:\\Users\\dimos\\Desktop\\CRUD API Project\\frontend\\src\\components\\add.js":"8","C:\\Users\\dimos\\Desktop\\CRUD API Project\\frontend\\src\\hooks\\inputHook.js":"9","C:\\Users\\dimos\\Desktop\\CRUD API Project\\frontend\\src\\components\\showAll.js":"10","C:\\Users\\dimos\\Desktop\\CRUD API Project\\frontend\\src\\components\\update.js":"11","C:\\Users\\dimos\\Desktop\\CRUD API Project\\frontend\\src\\App.js":"12","C:\\Users\\dimos\\Desktop\\BOTH OF THEM TOGETHER\\CRUD API Project -ΜΚ2\\frontend\\src\\index.js":"13","C:\\Users\\dimos\\Desktop\\BOTH OF THEM TOGETHER\\CRUD API Project -ΜΚ2\\frontend\\src\\components\\add.js":"14","C:\\Users\\dimos\\Desktop\\BOTH OF THEM TOGETHER\\CRUD API Project -ΜΚ2\\frontend\\src\\App.js":"15","C:\\Users\\dimos\\Desktop\\BOTH OF THEM TOGETHER\\CRUD API Project -ΜΚ2\\frontend\\src\\components\\update.js":"16","C:\\Users\\dimos\\Desktop\\BOTH OF THEM TOGETHER\\CRUD API Project -ΜΚ2\\frontend\\src\\components\\showAll.js":"17"},{"size":1260,"mtime":1610659297391,"results":"18","hashOfConfig":"19"},{"size":1363,"mtime":1610638442104,"results":"20","hashOfConfig":"19"},{"size":324,"mtime":1610562713133,"results":"21","hashOfConfig":"19"},{"size":202,"mtime":1610523858911,"results":"22","hashOfConfig":"19"},{"size":6034,"mtime":1610641347686,"results":"23","hashOfConfig":"19"},{"size":2948,"mtime":1610659552743,"results":"24","hashOfConfig":"19"},{"size":202,"mtime":1610523858911,"results":"25","hashOfConfig":"26"},{"size":2902,"mtime":1610705242628,"results":"27","hashOfConfig":"26"},{"size":324,"mtime":1610562713133,"results":"28","hashOfConfig":"26"},{"size":1404,"mtime":1610708283073,"results":"29","hashOfConfig":"26"},{"size":5033,"mtime":1610708299620,"results":"30","hashOfConfig":"26"},{"size":1205,"mtime":1610705295597,"results":"31","hashOfConfig":"26"},{"size":202,"mtime":1610523858911,"results":"32","hashOfConfig":"33"},{"size":3196,"mtime":1611078524673,"results":"34","hashOfConfig":"33"},{"size":1076,"mtime":1611076273432,"results":"35","hashOfConfig":"33"},{"size":6826,"mtime":1611076140378,"results":"36","hashOfConfig":"33"},{"size":2814,"mtime":1611075471337,"results":"37","hashOfConfig":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"upq1di",{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7kini",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ssdnjw",{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},"C:\\Users\\dimos\\Desktop\\Knowledge Project\\frontend\\src\\App.js",["75","76","77"],"C:\\Users\\dimos\\Desktop\\Knowledge Project\\frontend\\src\\components\\showAll.js",["78","79"],"C:\\Users\\dimos\\Desktop\\Knowledge Project\\frontend\\src\\hooks\\inputHook.js",[],"C:\\Users\\dimos\\Desktop\\Knowledge Project\\frontend\\src\\index.js",[],"C:\\Users\\dimos\\Desktop\\Knowledge Project\\frontend\\src\\components\\update.js",["80","81","82","83","84","85"],"C:\\Users\\dimos\\Desktop\\Knowledge Project\\frontend\\src\\components\\add.js",[],"C:\\Users\\dimos\\Desktop\\CRUD API Project\\frontend\\src\\index.js",[],"C:\\Users\\dimos\\Desktop\\CRUD API Project\\frontend\\src\\components\\add.js",[],"C:\\Users\\dimos\\Desktop\\CRUD API Project\\frontend\\src\\hooks\\inputHook.js",[],"C:\\Users\\dimos\\Desktop\\CRUD API Project\\frontend\\src\\components\\showAll.js",["86","87"],"C:\\Users\\dimos\\Desktop\\CRUD API Project\\frontend\\src\\components\\update.js",["88","89","90"],"C:\\Users\\dimos\\Desktop\\CRUD API Project\\frontend\\src\\App.js",["91","92","93"],"C:\\Users\\dimos\\Desktop\\BOTH OF THEM TOGETHER\\CRUD API Project -ΜΚ2\\frontend\\src\\index.js",[],"C:\\Users\\dimos\\Desktop\\BOTH OF THEM TOGETHER\\CRUD API Project -ΜΚ2\\frontend\\src\\components\\add.js",["94"],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport {\r\n    Form,\r\n    Input,\r\n    Button,\r\n    DatePicker,\r\n    Checkbox,\r\n    Row,\r\n    Col\r\n  } from 'antd';\r\n\r\nexport const Add = () => {\r\n    const [bool, setBool] = useState(false);\r\n    const [date, setDate] = useState(new Date());\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [check, setCheck] = useState(false);\r\n\r\n    const onChangeFirstName = (event) => {\r\n        setFirstName(event.target.value);\r\n        \r\n    };\r\n\r\n    const onChangeLastName = (event) => {\r\n        setLastName(event.target.value);\r\n    };\r\n\r\n\r\n    const onChangeDate = (event) => {\r\n        setDate(event.target.value);\r\n        \r\n    };\r\n\r\n    const postEntry =  async(id) => {\r\n\r\n        setCheck(true);\r\n\r\n        await axios.post(\r\n            `http://localhost:4000/All`,\r\n            {\r\n                \"last_name\": lastName,\r\n                \"first_name\": firstName,\r\n                \"is_active\": bool,\r\n                \"date_of_birth\": date\r\n        })\r\n        setFirstName(\"\");\r\n        setLastName(\"\");\r\n        setBool(false);\r\n        setDate(new Date());\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Form\r\n                labelCol={{ span: 3 }}\r\n                wrapper Col={{ span: 5 }}\r\n                layout=\"horizontal\"\r\n                size=\"middle\"\r\n            >\r\n\r\n                <br/>\r\n                <Form.Item label=\"First Name: \">\r\n                    <Input\r\n                        type=\"text\"\r\n                        value={firstName}\r\n                        onChange={onChangeFirstName}\r\n                        allowClear={true}\r\n                        style={{ width: '20%' }}\r\n                    />            \r\n                </Form.Item>\r\n                <Form.Item label=\"Last Name: \">\r\n                    <Input\r\n                        type=\"text\"\r\n                        value={lastName}\r\n                        onChange={onChangeLastName}\r\n                        allowClear={true}\r\n                        style={{ width: '20%' }}\r\n\r\n                    />              \r\n                </Form.Item>\r\n                <Form.Item label=\"Is Active: \">\r\n                    <Checkbox\r\n                        checked={bool}\r\n                        onChange={() => setBool(!bool)}/>\r\n                </Form.Item> \r\n                <Form.Item label=\"DatePicker\">\r\n                <DatePicker \r\n                    onChange={setDate}\r\n                />\r\n                </Form.Item>\r\n                <br/>\r\n                <Form.Item label=\" \" colon={false}>\r\n                    <Button type=\"primary\" onClick={() => postEntry()}>Add Employee</Button>\r\n                </Form.Item>\r\n\r\n            </Form>\r\n\r\n            <div> \r\n                <Row>\r\n                    <Col span={17} offset={2}>\r\n                    {check === false ?\r\n                        null\r\n                            : \r\n                        <h1>Added Employee!</h1>\r\n                    }   \r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Add","C:\\Users\\dimos\\Desktop\\BOTH OF THEM TOGETHER\\CRUD API Project -ΜΚ2\\frontend\\src\\App.js",[],"C:\\Users\\dimos\\Desktop\\BOTH OF THEM TOGETHER\\CRUD API Project -ΜΚ2\\frontend\\src\\components\\update.js",["95","96","97","98","99"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Row, Col, Divider, Checkbox, Button, Layout, Form, Input, DatePicker } from \"antd\";\r\nimport moment from 'moment';\r\n\r\nexport const Update = () => {\r\n    const [entry, setEntry] = useState([]);\r\n    const [bool, setBool] = useState(false);\r\n    const [date, setDate] = useState(new Date());\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [lastName, setLastName] = useState(\"\");\r\n    const [editBool, setEditBool] = useState(false);\r\n    const [ID, setID] = useState([]);\r\n\r\n    const fetchEntries =  async() => {\r\n\r\n        const { status, data } = await axios.get(\r\n            `http://localhost:4000/All`\r\n        );\r\n        if (status === 200) {\r\n            setEntry(data);\r\n        }\r\n    }\r\n\r\n    const initialEntryState = {\r\n        \"id\": null,\r\n        \"last_name\": \"\",\r\n        \"first_name\": \"\",\r\n        \"is_online\": false,\r\n        \"date\": null\r\n      };\r\n      const [entryNew, setEntryNew] = useState(initialEntryState);\r\n\r\n      const onChangeFirstName = (event) => {\r\n        setFirstName(event.target.value);\r\n      };\r\n\r\n      const onChangeLastName = (event) => {\r\n        setLastName(event.target.value);\r\n      };\r\n      const onChangeDate = (event) => {\r\n        setDate(event.target.value);\r\n        \r\n    };\r\n\r\n    const handleEdit =(entry_) => {\r\n        setEditBool(true);\r\n        setID(entry_.id);\r\n        setEntryNew(entry_);\r\n        setFirstName(entry_.first_name);\r\n        setLastName(entry_.last_name);\r\n        setBool(entry_.is_active);\r\n        setDate(moment(entry_.date_of_birth));\r\n    }\r\n    const updateEntry =  async(id) => {\r\n        const { status, data } = await axios.put(\r\n            `http://localhost:4000/All/${id}`,\r\n            {\r\n                \"last_name\": lastName,\r\n                \"first_name\": firstName,\r\n                \"is_active\": bool,\r\n                \"date_of_birth\": date\r\n              }\r\n        );\r\n        fetchEntries();\r\n        setEditBool(false);        \r\n    }\r\n\r\n        useEffect(() => {\r\n            fetchEntries();\r\n          }, []);\r\n\r\n        return (\r\n\r\n        <div>\r\n            <Row>\r\n                <Col span={15}>\r\n                    <div>\r\n\r\n                        <Row>\r\n                            <Col><h1> </h1></Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col span={1}><h1> </h1></Col>\r\n                            <Col span={2}>\r\n                                <h3>Index</h3>\r\n                            </Col>\r\n                            <Col span={2}>\r\n                                <h3>Id</h3>\r\n\r\n\r\n                            </Col>               \r\n                            <Col span={5}>\r\n                                <h3>First Name</h3>\r\n\r\n\r\n                            </Col>                 \r\n                            <Col span={5}>\r\n                                <h3>Last Name</h3>\r\n\r\n                            </Col>\r\n                            <Col span={5}>\r\n                                <h3>Birthday</h3>\r\n                            </Col>\r\n                            <Col span={2}>\r\n                                <h3>Active</h3>\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider/>\r\n\r\n                        {entry.map((entries, index) => (\r\n                            <Row>\r\n                                <Col span={1}><h1> </h1></Col>\r\n\r\n                                <Col span={2}>\r\n                                    {index+1}\r\n                                </Col>\r\n                                <Col span={2}>\r\n                                    {entries.id}\r\n                                </Col>               \r\n                                <Col span={5}>\r\n                                    {entries.first_name}\r\n                                </Col>                 \r\n                                <Col span={5}>\r\n                                    {entries.last_name}\r\n                                </Col>\r\n                                <Col span={5}>\r\n                                    {entries.date_of_birth}\r\n                                </Col>\r\n                                <Col span={2}>\r\n                                    <Checkbox checked={entries.is_active}/>\r\n                                </Col>\r\n\r\n                                <Button type=\"primary\" onClick={() => handleEdit(entries)}>Edit</Button>\r\n                                <Divider/>\r\n                            </Row>\r\n\r\n                        ))}\r\n\r\n\r\n\r\n                    </div> \r\n                </Col>\r\n                <Col span={2}><h1> </h1></Col>\r\n                <Col span={6}>\r\n                    {editBool === false ?\r\n                        null\r\n                        : \r\n\r\n                        <Form\r\n                            layout=\"horizontal\"\r\n                            size=\"middle\"\r\n                        >\r\n\r\n                        <br/>\r\n                        <Form.Item label=\"First Name: \">\r\n                        <Input\r\n                            type=\"text\"\r\n                            value={firstName}\r\n                            onChange={onChangeFirstName}\r\n                            allowClear={true}\r\n                            style={{ width: '100%' }}\r\n                        />            \r\n                        </Form.Item>\r\n                        <Form.Item label=\"Last Name: \">\r\n                        <Input\r\n                            type=\"text\"\r\n                            value={lastName}\r\n                            onChange={onChangeLastName}\r\n                            allowClear={true}\r\n                            style={{ width: '100%' }}\r\n                        />              \r\n                        </Form.Item>\r\n                        <Form.Item label=\"Is Active: \">\r\n                        <Checkbox\r\n                            checked={bool}\r\n                            onChange={() => setBool(!bool)}\r\n                        />\r\n                        </Form.Item> \r\n                        <Form.Item label=\"Birthday: \">\r\n                        <DatePicker \r\n                            value={date}\r\n                            onChange={setDate}\r\n                        />\r\n                        </Form.Item>\r\n                        <br/>\r\n                        <Form.Item label=\" \" colon={false}>\r\n                        <Button type=\"primary\" \r\n                            onClick={() => updateEntry(ID)}>Submit</Button>\r\n                        </Form.Item>\r\n                        </Form>\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </div> \r\n            \r\n        );\r\n    }\r\n    export default Update","C:\\Users\\dimos\\Desktop\\BOTH OF THEM TOGETHER\\CRUD API Project -ΜΚ2\\frontend\\src\\components\\showAll.js",["100","101"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Row, Col, Button, Divider, Checkbox } from 'antd';\r\n\r\nexport const ShowAll = () => {\r\n    const [entry, setEntry] = useState([]);\r\n\r\n    const fetchEntries =  async() => {\r\n        const { status, data } = await axios.get(\r\n            `http://localhost:4000/All`\r\n        );\r\n        if (status === 200) {\r\n            setEntry(data);\r\n        }\r\n    }\r\n        \r\n    const delEntry =  async(id) => {\r\n        const { status, data } = await axios.delete(\r\n            `http://localhost:4000/All/${id}`\r\n        );\r\n        fetchEntries();\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEntries();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n\r\n                <Row>\r\n                    <Col><h1> </h1></Col>\r\n                </Row>\r\n                <Row>\r\n                <Col span={1} offset={1}>\r\n                            <h3>Index</h3>\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <h3>Id</h3>\r\n\r\n                            \r\n                        </Col>               \r\n                        <Col span={3}>\r\n                            <h3>First Name</h3>\r\n\r\n                            \r\n                        </Col>                 \r\n                        <Col span={3}>\r\n                            <h3>Last Name</h3>\r\n\r\n                        </Col>\r\n                        <Col span={4}>\r\n                            <h3>Birthday</h3>\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <h3>Active</h3>\r\n                        </Col>\r\n                </Row>\r\n                <Divider/>\r\n\r\n                {entry.map((entries, index) => (\r\n                    <Row>\r\n                        <Col span={1} offset={1}>\r\n                            {index+1}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            {entries.id}\r\n                        </Col>               \r\n                        <Col span={3}>\r\n                            {entries.first_name}\r\n                        </Col>                 \r\n                        <Col span={3}>\r\n                            {entries.last_name}\r\n                        </Col>\r\n                        <Col span={4}>\r\n\r\n                            {entries.date_of_birth}\r\n                        </Col>\r\n                        <Col span={1}>\r\n                            <Checkbox checked={entries.is_active}/>\r\n                        </Col>\r\n                        <Button type=\"primary\" danger onClick={() => delEntry(entries.id)}>Delete</Button>\r\n                        <Divider/>\r\n\r\n                    </Row>\r\n\r\n                ))}  \r\n\r\n        </div>\r\n    );\r\n}\r\nexport default ShowAll",{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"106","line":1,"column":27,"nodeType":"104","messageId":"105","endLine":1,"endColumn":36},{"ruleId":"102","severity":1,"message":"107","line":2,"column":42,"nodeType":"104","messageId":"105","endLine":2,"endColumn":46},{"ruleId":"102","severity":1,"message":"108","line":18,"column":17,"nodeType":"104","messageId":"105","endLine":18,"endColumn":23},{"ruleId":"102","severity":1,"message":"109","line":18,"column":25,"nodeType":"104","messageId":"105","endLine":18,"endColumn":29},{"ruleId":"102","severity":1,"message":"110","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":16},{"ruleId":"102","severity":1,"message":"111","line":9,"column":12,"nodeType":"104","messageId":"105","endLine":9,"endColumn":23},{"ruleId":"102","severity":1,"message":"112","line":30,"column":11,"nodeType":"104","messageId":"105","endLine":30,"endColumn":21},{"ruleId":"102","severity":1,"message":"113","line":50,"column":14,"nodeType":"104","messageId":"105","endLine":50,"endColumn":22},{"ruleId":"102","severity":1,"message":"108","line":89,"column":17,"nodeType":"104","messageId":"105","endLine":89,"endColumn":23},{"ruleId":"102","severity":1,"message":"109","line":89,"column":25,"nodeType":"104","messageId":"105","endLine":89,"endColumn":29},{"ruleId":"102","severity":1,"message":"108","line":17,"column":17,"nodeType":"104","messageId":"105","endLine":17,"endColumn":23},{"ruleId":"102","severity":1,"message":"109","line":17,"column":25,"nodeType":"104","messageId":"105","endLine":17,"endColumn":29},{"ruleId":"102","severity":1,"message":"113","line":31,"column":14,"nodeType":"104","messageId":"105","endLine":31,"endColumn":22},{"ruleId":"102","severity":1,"message":"108","line":51,"column":17,"nodeType":"104","messageId":"105","endLine":51,"endColumn":23},{"ruleId":"102","severity":1,"message":"109","line":51,"column":25,"nodeType":"104","messageId":"105","endLine":51,"endColumn":29},{"ruleId":"102","severity":1,"message":"103","line":1,"column":17,"nodeType":"104","messageId":"105","endLine":1,"endColumn":25},{"ruleId":"102","severity":1,"message":"106","line":1,"column":27,"nodeType":"104","messageId":"105","endLine":1,"endColumn":36},{"ruleId":"102","severity":1,"message":"107","line":2,"column":42,"nodeType":"104","messageId":"105","endLine":2,"endColumn":46},{"ruleId":"102","severity":1,"message":"114","line":31,"column":11,"nodeType":"104","messageId":"105","endLine":31,"endColumn":23},{"ruleId":"102","severity":1,"message":"115","line":3,"column":47,"nodeType":"104","messageId":"105","endLine":3,"endColumn":53},{"ruleId":"102","severity":1,"message":"113","line":32,"column":14,"nodeType":"104","messageId":"105","endLine":32,"endColumn":22},{"ruleId":"102","severity":1,"message":"114","line":41,"column":13,"nodeType":"104","messageId":"105","endLine":41,"endColumn":25},{"ruleId":"102","severity":1,"message":"108","line":56,"column":17,"nodeType":"104","messageId":"105","endLine":56,"endColumn":23},{"ruleId":"102","severity":1,"message":"109","line":56,"column":25,"nodeType":"104","messageId":"105","endLine":56,"endColumn":29},{"ruleId":"102","severity":1,"message":"108","line":18,"column":17,"nodeType":"104","messageId":"105","endLine":18,"endColumn":23},{"ruleId":"102","severity":1,"message":"109","line":18,"column":25,"nodeType":"104","messageId":"105","endLine":18,"endColumn":29},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","'status' is assigned a value but never used.","'data' is assigned a value but never used.","'useInput' is defined but never used.","'singleEntry' is assigned a value but never used.","'fetchEntry' is assigned a value but never used.","'entryNew' is assigned a value but never used.","'onChangeDate' is assigned a value but never used.","'Layout' is defined but never used."]